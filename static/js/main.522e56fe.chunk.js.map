{"version":3,"sources":["components/Login/LoginScreen.js","components/ui/Navbar.js","data/Ninjas.js","components/Ninjas/NinjaCard.js","components/Ninjas/NinjaList.js","selectors/getNinjaByClass.js","components/Protagonista/ProtagonistaScreen.js","components/Secundario/SecundarioScreen.js","components/Antagonista/AntagonistaScreen.js","components/Ninjas/NinjaScreen.js","selectors/getNinjaById.js","components/Search/SearchScreen.js","selectors/getNinjaByName.js","routers/DashboardRoutes.js","routers/AppRouter.js","App.js","index.js"],"names":["LoginScreen","history","className","onClick","push","Navbar","to","id","activeClassName","exact","ninjas","DivCard","styled","div","DivImagen","DivTexto","Imagen","img","H5","h5","P","p","Small","small","NinjaCard","name","village","techniques","src","alt","ContenedorCard","NinjaList","Class","useMemo","type","includes","Error","filter","ninja","getNinjaByClass","map","ProtagonistaScreen","SecundarioScreen","AntagonistaScreen","Div","H3","h3","Parrafo","Button","button","NinjaScreen","ninjaId","useParams","find","getNinjaById","phrase","length","goBack","SearchScreen","location","useLocation","queryString","parse","search","q","useState","searchText","state","setState","ninjasFilter","toLocaleLowerCase","getNinjaByName","onSubmit","e","preventDefault","placeholder","autoComplete","value","onChange","target","DashboardRoutes","path","component","AppRouter","App","divRoot","document","getElementById","ReactDOM","render"],"mappings":"sLAEaA,EAAc,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAMzB,OACI,sBAAKC,UAAU,iBAAf,UACI,kDACA,uBAEA,wBACIA,UAAU,eACVC,QAXQ,WAChBF,EAAQG,KAAK,MAQT,wBCVCC,EAAS,WAClB,OACI,qBAAKH,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CACIA,UAAU,eACVI,GAAG,IAFP,uBAMA,qBAAKJ,UAAU,2BAA2BK,GAAG,qBAA7C,SACI,sBAAKL,UAAU,aAAf,UACA,cAAC,IAAD,CACQM,gBAAgB,SAChBN,UAAU,oBACVO,OAAK,EACLH,GAAG,gBAJX,2BASI,cAAC,IAAD,CACIE,gBAAgB,SAChBN,UAAU,oBACVO,OAAK,EACLH,GAAG,cAJP,yBAQA,cAAC,IAAD,CACIE,gBAAgB,SAChBN,UAAU,oBACVO,OAAK,EACLH,GAAG,eAJP,0BAQA,cAAC,IAAD,CACIE,gBAAgB,SAChBN,UAAU,oBACVO,OAAK,EACLH,GAAG,UAJP,oBAQA,cAAC,IAAD,CACIE,gBAAgB,SAChBN,UAAU,oBACVO,OAAK,EACLH,GAAG,SAJP,8B,eChDXI,EAAS,CAClB,CACI,GAAM,sBACN,KAAO,UACP,KAAO,cACP,QAAU,0CACV,WAAa,QACb,OAAS,oCAEb,CACI,GAAM,oBACN,KAAO,QACP,KAAO,cACP,QAAU,wCACV,WAAa,6BACb,OAAS,mEAEb,CACI,GAAM,qBACN,KAAO,gBACP,KAAO,cACP,QAAU,6CACV,WAAa,YACb,OAAS,mQAEb,CACI,GAAM,qBACN,KAAO,iBACP,KAAO,cACP,QAAU,0CACV,WAAa,kBACb,OAAS,2CAEb,CACI,GAAM,qBACN,KAAO,SACP,KAAO,cACP,QAAU,yCACV,WAAa,SACb,OAAS,4BAEb,CACI,GAAM,uBACN,KAAO,WACP,KAAO,cACP,QAAU,wCACV,WAAa,YACb,OAAS,yEAEb,CACI,GAAM,qBACN,KAAO,SACP,KAAO,cACP,QAAU,wCACV,WAAa,iCACb,OAAS,iEAEb,CACI,GAAM,oBACN,KAAO,QACP,KAAO,cACP,QAAU,0CACV,WAAa,eACb,OAAS,wJAEb,CACI,GAAM,qBACN,KAAO,gBACP,KAAO,cACP,QAAU,6CACV,WAAa,UACb,OAAS,uMAEb,CACI,GAAM,yBACN,KAAO,aACP,KAAO,cACP,QAAU,6CACV,WAAa,eACb,OAAS,6LAEb,CACI,GAAM,mBACN,KAAO,OACP,KAAO,cACP,QAAU,0CACV,WAAa,gBACb,OAAS,6VAEb,CACI,GAAM,qBACN,KAAO,SACP,KAAO,cACP,QAAU,uCACV,WAAa,gCACb,OAAS,qEAEb,CACI,GAAM,mBACN,KAAO,OACP,KAAO,cACP,QAAU,6CACV,WAAa,QACb,OAAS,kIAEb,CACI,GAAM,qBACN,KAAO,QACP,KAAO,eACP,QAAU,uCACV,WAAa,wBACb,OAAS,kIAEb,CACI,GAAM,mBACN,KAAO,YACP,KAAO,eACP,QAAU,6CACV,WAAa,aACb,OAAS,2CAEb,CACI,GAAM,uBACN,KAAO,UACP,KAAO,eACP,QAAU,6CACV,WAAa,iBACb,OAAS,iIAEb,CACI,GAAM,uBACN,KAAO,iBACP,KAAO,eACP,QAAU,6CACV,WAAa,UACb,OAAS,mEAEb,CACI,GAAM,sBACN,KAAO,iBACP,KAAO,eACP,QAAU,6CACV,WAAa,6BACb,OAAS,yFAEb,CACI,GAAM,sBACN,KAAO,gBACP,KAAO,eACP,QAAU,6CACV,WAAa,gBACb,OAAS,gFAEb,CACI,GAAM,sBACN,KAAO,gBACP,KAAO,eACP,QAAU,6CACV,WAAa,oBACb,OAAS,mFAEb,CACI,GAAM,uBACN,KAAO,gBACP,KAAO,eACP,QAAU,6CACV,WAAa,wBACb,OAAS,8GAEb,CACI,GAAM,iBACN,KAAO,eACP,KAAO,aACP,QAAU,6CACV,WAAa,uBACb,OAAS,oEAEb,CACI,GAAM,kBACN,KAAO,eACP,KAAO,aACP,QAAU,6CACV,WAAa,iBACb,OAAS,2EAEb,CACI,GAAM,qBACN,KAAO,kBACP,KAAO,aACP,QAAU,2CACV,WAAa,iBACb,OAAS,6CAEb,CACI,GAAM,oBACN,KAAO,kBACP,KAAO,aACP,QAAU,6CACV,WAAa,WACb,OAAS,oFAEb,CACI,GAAM,kBACN,KAAO,kBACP,KAAO,aACP,QAAU,6CACV,WAAa,aACb,OAAS,uGAEb,CACI,GAAM,qBACN,KAAO,WACP,KAAO,aACP,QAAU,6CACV,WAAa,cACb,OAAS,sFAEb,CACI,GAAM,uBACN,KAAO,iBACP,KAAO,aACP,QAAU,6CACV,WAAa,4BACb,OAAS,0FAEb,CACI,GAAM,oBACN,KAAO,gBACP,KAAO,aACP,QAAU,6CACV,WAAa,iBACb,OAAS,yGAEb,CACI,GAAM,sBACN,KAAO,iBACP,KAAO,aACP,QAAU,6CACV,WAAa,qBACb,OAAS,sN,0nCC3OjB,IAAMC,EAAUC,IAAOC,IAAV,KASPC,EAAYF,IAAOC,IAAV,KAITE,EAAWH,IAAOC,IAAV,KAORG,EAASJ,IAAOK,IAAV,KAINC,EAAKN,IAAOO,GAAV,KAQFC,EAAIR,IAAOS,EAAV,KAWDC,EAAQV,IAAOW,MAAV,KAIEC,EAAY,SAAC,GAAqC,IAApCjB,EAAmC,EAAnCA,GAAIkB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAC1C,OACI,eAAChB,EAAD,CAAST,UAAU,oCAAnB,UACI,cAACY,EAAD,UACI,cAACE,EAAD,CAAQY,IAAG,0BAAqBrB,EAArB,QAA+BsB,IAAKJ,MAGnD,eAACV,EAAD,WACI,cAACG,EAAD,UAAKO,IACL,cAACL,EAAD,UACKM,IAGL,eAACN,EAAD,0BACa,cAACE,EAAD,UAAQK,OAGrB,cAACP,EAAD,UACI,cAAC,IAAD,CAAMd,GAAE,kBAAaC,GAArB,gC,8RC/DpB,IAAMuB,E,MAAiBlB,EAAOC,IAAV,KAWPkB,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEjBtB,EAASuB,mBAAQ,kBCjBI,SAACC,GAI5B,IAFqB,CAAC,eAAgB,aAAc,eAElCC,SAASD,GACvB,MAAME,MAAM,UAAD,OAAWF,EAAX,qBAGf,OAAOxB,EAAO2B,QAAO,SAAAC,GAAK,OAAIA,EAAMJ,OAASA,KDShBK,CAAgBP,KAAQ,CAACA,IAEtD,OACI,cAACF,EAAD,UAEQpB,EAAO8B,KAAI,SAAAF,GAAK,OACZ,cAAC,EAAD,eACQA,GADQA,EAAM/B,UEtB7BkC,EAAqB,WAC9B,OACI,qCACI,+CACA,uBACA,cAAC,EAAD,CAAWT,MAAO,qBCLjBU,EAAmB,WAC5B,OACI,qCACI,wDACA,uBACA,cAAC,EAAD,CAAWV,MAAO,mBCLjBW,EAAoB,WAC7B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAWX,MAAO,oB,o6CCH9B,IAAMY,EAAMhC,IAAOC,IAAV,KAKHC,EAAYF,IAAOC,IAAV,KAUTE,EAAWH,IAAOC,IAAV,KAQRG,EAASJ,IAAOK,IAAV,KAIN4B,EAAKjC,IAAOkC,GAAV,KAIFC,EAAUnC,IAAOS,EAAV,KAUP2B,EAASpC,IAAOqC,OAAV,KAkBCC,EAAc,SAAC,GAAe,IAAdjD,EAAa,EAAbA,QAElBkD,EAAWC,cAAXD,QAEDb,EAAQL,mBAAQ,kBClEE,SAAC1B,GAEzB,OAAOG,EAAO2C,MAAK,SAAAf,GAAK,OAAIA,EAAM/B,KAAOA,KDgEb+C,CAAaH,KAAU,CAACA,IAEpD,IAAKb,EACD,OAAO,cAAC,IAAD,CAAUhC,GAAG,MAGxB,IASOC,EAAyC+B,EAAzC/B,GAAIkB,EAAqCa,EAArCb,KAAMC,EAA+BY,EAA/BZ,QAASC,EAAsBW,EAAtBX,WAAY4B,EAAUjB,EAAViB,OAEtC,OAEI,qCACI,sDACA,uBACA,eAACX,EAAD,WACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAQhB,IAAG,0BAAqBrB,EAArB,QAA+BL,UAAU,wCAAwC2B,IAAKJ,MAGrG,eAAC,EAAD,WACI,cAACoB,EAAD,UAAKpB,IACL,uBACA,gCACI,eAACsB,EAAD,WACI,uCADJ,IACmBrB,KAEnB,eAACqB,EAAD,WACI,4CADJ,IACqBpB,KAErB,eAACoB,EAAD,WACI,uCADJ,IACmBQ,KAEnB,cAACP,EAAD,CACI7C,QAnCH,WAEbF,EAAQuD,QAAS,EACjBvD,EAAQG,KAAK,KAEbH,EAAQwD,UA6BI,iC,kCEtGXC,GAAe,SAAC,GAAe,IAAdzD,EAAa,EAAbA,QAEpB0D,EAAWC,cAFsB,EAGtBC,KAAYC,MAAMH,EAASI,QAArCC,SAHgC,MAG5B,GAH4B,IAKbC,mBAAS,CAC/BC,WAAYF,IANuB,mBAKhCG,EALgC,KAKzBC,EALyB,KAgBhCF,EAAcC,EAAdD,WAODG,EAAepC,mBAAQ,kBC3BH,WAAgB,IAAfR,EAAc,uDAAP,GAElC,MAAa,KAATA,EACO,IAGXA,EAAOA,EAAK6C,oBACL5D,EAAO2B,QAAO,SAAAC,GAAK,OAAIA,EAAMb,KAAK6C,oBAAoBnC,SAASV,ODoBnC8C,CAAeP,KAAI,CAACA,IAEvD,OACI,gCACI,wCACA,uBAEA,sBAAK9D,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,gDACA,uBAEA,uBACIsE,SAlBC,SAACC,GAClBA,EAAEC,iBACFzE,EAAQG,KAAR,aAAmB8D,KAeP,UAGI,uBACIhC,KAAK,OACLyC,YAAY,uBACZzE,UAAU,eACVuB,KAAK,aACLmD,aAAa,MACbC,MAAOX,EACPY,SApCE,SAACL,GACvBL,EAAS,2BACFD,GADC,kBAEHM,EAAEM,OAAOtD,KAAQgD,EAAEM,OAAOF,YAqCf,wBACI3C,KAAK,SACLhC,UAAU,qCAFd,0BASR,sBAAKA,UAAU,QAAf,UACI,4CACA,uBAEO,KAAJ8D,GAEC,qBAAK9D,UAAU,mBAAf,sDAKI,KAAL8D,GAAmC,IAAxBK,EAAab,QAEvB,sBAAKtD,UAAU,qBAAf,wDACgD8D,EADhD,OAMAK,EAAa7B,KAAI,SAAAF,GAAK,OAClB,cAAC,EAAD,eAEQA,GADCA,EAAM/B,iBE5E9ByE,GAAkB,WAC3B,OACI,qCACI,cAAC,EAAD,IAEA,qBAAK9E,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOO,OAAK,EAACwE,KAAK,gBAAgBC,UAAWzC,IAC7C,cAAC,IAAD,CAAOhC,OAAK,EAACwE,KAAK,kBAAkBC,UAAWhC,IAC/C,cAAC,IAAD,CAAOzC,OAAK,EAACwE,KAAK,cAAcC,UAAWxC,IAC3C,cAAC,IAAD,CAAOjC,OAAK,EAACwE,KAAK,eAAeC,UAAWvC,IAC5C,cAAC,IAAD,CAAOlC,OAAK,EAACwE,KAAK,UAAUC,UAAWxB,KAEvC,cAAC,IAAD,CAAUpD,GAAG,gBAAgB4E,UAAWzC,aCb/C0C,GAAY,WACrB,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO1E,OAAK,EAACwE,KAAK,SAASC,UAAWlF,IACtC,cAAC,IAAD,CAAOiF,KAAK,IAAIC,UAAYF,aCLjCI,GANI,WACjB,OACE,cAAC,GAAD,KCDEC,GAAUC,SAASC,eAAe,QAExCC,IAASC,OAAO,cAAC,GAAD,IAASJ,M","file":"static/js/main.522e56fe.chunk.js","sourcesContent":["import React from 'react';\n\nexport const LoginScreen = ({history}) => {\n\n    const handleLogin = () => {\n        history.push('/');\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Login en proceso</h1>\n            <hr/>\n\n            <button\n                className=\"btn btn-dark\"\n                onClick={handleLogin}\n            >\n                Return\n            </button>\n        </div>\n    )\n}","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\n\nexport const Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <Link \n                    className=\"navbar-brand\" \n                    to=\"/\"\n                >\n                    NarutoApp\n                </Link>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n                    <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/Protagonista\"\n                        >\n                            Protagonistas\n                        </NavLink>\n\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/Secundario\"\n                        >\n                            Secundarios\n                        </NavLink>\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/Antagonista\"\n                        >\n                            Antagonistas\n                        </NavLink>\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/search\"\n                        >\n                            Search\n                        </NavLink>\n                        <NavLink \n                            activeClassName=\"active\"\n                            className=\"nav-item nav-link\" \n                            exact\n                            to=\"/login\"\n                        >\n                            Login\n                        </NavLink>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}","export const ninjas = [\n    {\n        'id': 'antagonista_deidara',\n        'name':'Deidara',\n        'type':'Antagonista', \n        'village':'Iwagakure: Aldea Oculta entre las Rocas',\n        'techniques':'Katsu',\n        'phrase':'¡El arte es una explosión!'\n    },\n    {\n        'id': 'antagonista_hidan',\n        'name':'Hidan',\n        'type':'Antagonista',     \n        'village':'Yugakure: Aldea de las Aguas Termales',\n        'techniques':'Jujutsu: Kuji Sōketsu',\n        'phrase':'La matanza es el precepto más importante de la fe de Jashin.'\n    },\n    {\n        'id': 'antagonista_itachi',\n        'name':'Itachi Uchiha',\n        'type':'Antagonista', \n        'village':'Konohagakure: Aldea Oculta entre las Hojas',\n        'techniques':'Tsukuyomi',\n        'phrase':'La gente vive apoyándose en el conocimiento y la conciencia. A eso lo llaman realidad. Pero el conocimiento y la conciencia son conceptos abstractos. Por tanto, puede que esa realidad sea una ilusión. La gente vive dentro de su propia convicción.'\n    },\n    {\n        'id': 'antagonista_kabuto',\n        'name':'Kabuto Yakushi',\n        'type':'Antagonista', \n        'village':'Iwagakure: Aldea Oculta entre las Rocas',\n        'techniques':'Chakura no Mesu',\n        'phrase':'Mil cambios, diez mil transformaciones.'\n    },\n    {\n        'id': 'antagonista_kakuzu',\n        'name':'Kakuzu',\n        'type':'Antagonista', \n        'village':'Takigakure: Aldea Oculta de la Cascada',\n        'techniques':'Jiongu',\n        'phrase':'El dinero es lo primero.'\n    },\n    {\n        'id': 'antagonista_kimimaro',\n        'name':'Kimimaro',\n        'type':'Antagonista', \n        'village':'Kirigakure: Aldea Oculta de la Niebla',\n        'techniques':'Hessendan',\n        'phrase':'Aún sigo con vida y si es así, debe de ser por alguna razón.'\n    },\n    {\n        'id': 'antagonista_kisame',\n        'name':'Kisame',\n        'type':'Antagonista', \n        'village':'Kirigakure: Aldea Oculta de la Niebla',\n        'techniques':'Suiton: Dai Bukusui Shōha',\n        'phrase':'Mi nombre es Hoshigaki Kisame, un nombre que no olvidarás.'\n    },\n    {\n        'id': 'antagonista_konan',\n        'name':'Konan',\n        'type':'Antagonista', \n        'village':'Amegakure: Aldea Oculta entre la Lluvia',\n        'techniques':'Kami Bunshin',\n        'phrase':'Siempre fui prisionera de mis recuerdos... Ahora que mi viaje ha llegado a su fin, me pregunto si mis amigos estarán ahí, esperando por mí.'\n    },\n    {\n        'id': 'antagonista_madara',\n        'name':'Madara Uchiha',\n        'type':'Antagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Susanoo',\n        'phrase':'Sé realista, este mundo está lleno de cosas que no funcionan como deseas, cuanto más vives... más te das cuenta de que esta realidad, está hecha de dolor, sufrimiento y vacío...'\n    },\n    {\n        'id': 'antagonista_orochimaru',\n        'name':'Orochimaru',\n        'type':'Antagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Fushi Tensei',\n        'phrase':'Tal vez no tenga sentido vivir... pero si sigues viviendo, podrás encontrar cosas muy interesantes. Así como tú has encontrado a esa flor... Así como yo te encontré a ti.'\n    },\n    {\n        'id': 'antagonista_pain',\n        'name':'Pain',\n        'type':'Antagonista', \n        'village':'Amegakure: Aldea Oculta entre la Lluvia',\n        'techniques':'Shinra Tensei',\n        'phrase':'Somos de la misma raza, después de todo, las razones para ir a la guerra no importan. Religión, ideologías, recursos, tierras, rencor, amor. No importa si las razones son patéticas, son suficientes para comenzar una guerra. La guerra nunca acabará, razones sobran para sostener este hecho. La naturaleza humana busca el conflicto.'\n    },\n    {\n        'id': 'Antagonista_sasori',\n        'name':'Sasori',\n        'type':'Antagonista', \n        'village':'Sunagakure: Aldea Oculta de la Arena',\n        'techniques':'Aka Higi: Hyakki no Sōen',\n        'phrase':'El alma del creador siempre se mantiene dentro de sus creaciones.'\n    },\n    {\n        'id': 'Antagonista_tobi',\n        'name':'Tobi',\n        'type':'Antagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Kamui',\n        'phrase':'En un mundo ninja, aquellos que rompen las reglas son escoria. Pero aquellos que abandonan a sus amigos, son peor que escoria.'\n    },\n    {\n        'id': 'protagonista_gaara',\n        'name':'Gaara',\n        'type':'Protagonista', \n        'village':'Sunagakure: Aldea Oculta de la Arena',\n        'techniques':'Sabaku Sōsō',\n        'phrase':'Hemos caminado a través de la oscuridad de este mundo, es por eso que somos capaces de ver incluso una partícula de luz.'\n    },\n    {\n        'id': 'protagonista_gai',\n        'name':'Maito Gai',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Asa Kujaku',\n        'phrase':'¡He aquí el poder de la juventud!'\n    },\n    {\n        'id': 'protagonista_jiraiya',\n        'name':'Jiraiya',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Nimpou Regeken',\n        'phrase':'Cuando eres herido aprendes a odiar, por otro lado cuando hieres, te resientes, pero también empiezas a sentirte culpable.'\n    },\n    {\n        'id': 'protagonista_kakashi',\n        'name':'Kakashi Hatake',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Chidori',\n        'phrase':'Saber que es lo correcto e ignorarlo es actuar como un cobarde.'\n    },\n    {\n        'id': 'protagonista_naruto',\n        'name':'Naruto Uzumaki',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Fūton: Rasen Shuriken',\n        'phrase':'Yo jamás me rindo, y jamás retrocederé a mi palabra. Ese es mi camino ninja.'\n    },\n    {\n        'id': 'protagonista_sakura',\n        'name':'Sakura Haruno',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Isshi Resshin',\n        'phrase':'¿No lo sabías? ¡Las mujeres tienen que ser fuertes para sobrevivir!'\n    },\n    {\n        'id': 'protagonista_sasuke',\n        'name':'Sasuke Uchiha',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Enton: Kagutsuchi',\n        'phrase':'Cerré los ojos hace mucho tiempo. Mis metas sólo existen en la oscuridad.'\n    },\n    {\n        'id': 'protagonista_tsunade',\n        'name':'Tsunade Senju',\n        'type':'Protagonista', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Byakugō no Jutsu',\n        'phrase':'Todas las cosas que tienen forma eventualmente decaen... Sólo los sentimientos permanecen para siempre.'\n    },\n    {\n        'id': 'secundario_ino',\n        'name':'Ino Yamanaka',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Shintenshin no Jutsu',\n        'phrase':'No es cuestión de si puedo o no puedo. ¡Lo estoy haciendo!'\n    },\n    {\n        'id': 'secundario_kiba',\n        'name':'Kiba Inuzuka',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Juujin Bunshin',\n        'phrase':'Eh, no sé lo que está pasando, pero yo voy siempre para adelante.'\n    },\n    {\n        'id': 'secundario_kushina',\n        'name':'Kushina Uzumaki',\n        'type':'Secundario', \n        'village':'Uzushiogakure: Aldea Oculta del Remolino',\n        'techniques':'Fūinjutsu',\n        'phrase':'¡Yo voy a ser la primera mujer Hokage!'\n    },\n    {\n        'id': 'secundario_minato',\n        'name':'Minato Namikaze',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Rasengan',\n        'phrase':'¡Quiero que todos en el pueblo me reconozcan y convertirme en un gran Hokage!'\n    },\n    {\n        'id': 'secundario_neji',\n        'name':'Neji Hyūga',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Jūken',\n        'phrase':'Todas las personas nacemos destinadas a algo, pero todos compartimos un mismo destino: la muerte...'\n    },\n    {\n        'id': 'secundario_rocklee',\n        'name':'Rock Lee',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Omote Renge',\n        'phrase':'Si crees en tus sueños, te demostraré que los puedes lograr trabajando duro.'\n    },\n    {\n        'id': 'secundario_shikamaru',\n        'name':'Shikamaru Nara',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Ninpo: Kage Mane no Jutsu',\n        'phrase':'Quisiera ser libre, como las nubes que vagan por el cielo sin ninguna preocupación.'\n    },\n    {\n        'id': 'secundario_shisui',\n        'name':'Shisui Uchiha',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Kotoamatsukami',\n        'phrase':'Está bien tener objetivos pero aferrarse a ellos con demasiada fuerza puede desviarnos del camino.'\n    },\n    {\n        'id': 'secundario_tobirama',\n        'name':'Tobirama Senju',\n        'type':'Secundario', \n        'village':'Konohagakure: Aldea Oculta Entre las Hojas',\n        'techniques':'Hiraishin no Jutsu',\n        'phrase':'Saru... Protege a aquellos que aman a la aldea y a aquellos que creen en ti... Y cuida de aquellos a quienes les puedes confiar la próxima generación. ¡A partir de mañana, tú serás el Hokage!'\n    },\n]","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst DivCard = styled.div`\n    background-color: rgba(255, 255, 255, 0.904);\n    border: 1px solid lightgray;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    display: flex;\n    flex-direction: row;\n`;\n\nconst DivImagen = styled.div`\n    flex: 0 0 50%;\n`;\n\nconst DivTexto = styled.div`\n    flex: 0 0 50%;\n    margin-left: .3rem;\n    margin-right: .2rem;\n    margin-top: .2rem;\n`;\n\nconst Imagen = styled.img`\n    width: 100%;\n`;\n\nconst H5 = styled.h5`\n    font-size: 1.4rem;\n\n    @media screen and (max-width: 768px){\n        font-size: .8rem;\n    }\n`;\n\nconst P = styled.p`\n    font-size: .8rem;\n    margin: .4rem;\n\n    @media screen and (max-width: 768px){\n        font-size: .6rem;\n        margin: .1rem;\n        margin-right: .4rem;\n    }\n`;\n\nconst Small = styled.small`\n    font-weight: bold;\n`;\n\nexport const NinjaCard = ({id, name, village, techniques}) => {\n    return (\n        <DivCard className=\"animate__animated animate__fadeIn\">\n            <DivImagen>\n                <Imagen src={`./assets/Naruto/${id}.jpg`} alt={name}/>\n            </DivImagen>\n            \n            <DivTexto>\n                <H5>{name}</H5> \n                <P>\n                    {village}\n                </P>\n                \n                <P>\n                    Técnica: <Small>{techniques}</Small>\n                </P>\n\n                <P>\n                    <Link to={`./Ninja/${id}`}>\n                        Más...\n                    </Link>\n                </P>\n            </DivTexto>\n        </DivCard>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { getNinjaByClass } from '../../selectors/getNinjaByClass';\nimport { NinjaCard } from './NinjaCard';\nimport styled from 'styled-components';\n\n\nconst ContenedorCard = styled.div`\n    display: grid;\n    grid-gap: 1.5rem;\n    grid-template-columns: repeat(3, 32%);\n\n    @media screen and (max-width: 1080px){\n        grid-template-columns: repeat(2, 47%);\n        grid-gap: 1.2rem;\n    }\n`;\n\nexport const NinjaList = ({Class}) => {\n\n    const ninjas = useMemo(() => getNinjaByClass(Class), [Class])\n\n    return (\n        <ContenedorCard>\n            {\n                ninjas.map(ninja => (\n                    <NinjaCard key={ninja.id}\n                        {...ninja}\n                    />\n                ))\n            }\n        </ContenedorCard>\n    )\n}\n\nexport default NinjaList;","import {ninjas} from '../data/Ninjas';\n\nexport const getNinjaByClass = (type) => {\n\n    const validarClass = ['Protagonista', 'Secundario', 'Antagonista'];\n\n    if (!validarClass.includes(type)){\n        throw Error(`class \"${type}\" no es correcto`);\n    }\n\n    return ninjas.filter(ninja => ninja.type === type);\n}","import React from 'react';\nimport { NinjaList } from '../Ninjas/NinjaList';\n\nexport const ProtagonistaScreen = () => {\n    return (\n        <>\n            <h1>Protagonistas</h1>\n            <hr/>\n            <NinjaList Class={\"Protagonista\"}/>\n        </>\n    )\n}","import React from 'react';\nimport { NinjaList } from '../Ninjas/NinjaList';\n\nexport const SecundarioScreen = () => {\n    return (\n        <>\n            <h1>Personajes secundarios</h1>\n            <hr/>\n            <NinjaList Class={\"Secundario\"}/>\n        </>\n    )\n}","import React from 'react';\nimport { NinjaList } from '../Ninjas/NinjaList';\n\nexport const AntagonistaScreen = () => {\n    return (\n        <>\n            <h1>Antagonistas</h1>\n            <hr/>\n            <NinjaList Class={\"Antagonista\"} />\n        </>\n    )\n}\n","import React, { useMemo } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { getNinjaById } from '../../selectors/getNinjaById';\nimport styled from '@emotion/styled';\n\nconst Div = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst DivImagen = styled.div`\n    flex: 0 0 40%;\n    padding-right: 2rem;\n\n    @media screen and (max-width: 768px){\n        flex: 0 0 50%;\n        padding-right: 1rem;\n    }\n`;\n\nconst DivTexto = styled.div`\n    background-color: rgba(255, 255, 255, 0.904);\n    border: 1px solid lightgray;\n    border-radius: 10px;\n    flex: 0 0 50%;\n    padding-top: .7rem;\n`;\n\nconst Imagen = styled.img`\n    width: 100%;\n`;\n\nconst H3 = styled.h3`\n    padding-left: 1rem;\n`;\n\nconst Parrafo = styled.p`\n    margin-left: 2rem;\n    margin-right: 1rem;\n\n    @media screen and (max-width: 768px){\n        font-size: .8rem;\n        margin-left: 1.5rem;\n    }\n`;\n\nconst Button = styled.button`\n    background-color: rgba(255, 255, 255, 0.904);\n    border: 3px solid lightgray;\n    border-radius: 5px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    margin-left: 2rem;\n    margin-bottom: 1rem;\n\n    &:hover{\n        background-color: lightgray;\n        color: white;\n    }\n\n    @media screen and (max-width:768px){\n        margin-left: 1.5rem;\n    }\n`;\n\nexport const NinjaScreen = ({history}) => {\n\n    const {ninjaId} = useParams();\n\n    const ninja = useMemo(() => getNinjaById(ninjaId), [ninjaId])\n\n    if (!ninja){\n        return <Redirect to=\"/\" />\n    }\n\n    const handleReturn = () => {\n\n        if (history.length <=2){\n            history.push('/');\n        } else{\n            history.goBack();\n        }\n    }\n\n    const {id, name, village, techniques, phrase} = ninja;\n\n    return (\n\n        <>\n            <h1>Personajes de Naruto</h1>\n            <hr/>\n            <Div>\n                <DivImagen>\n                    <Imagen src={`./assets/Naruto/${id}.jpg`} className=\"animate__animated animate__fadeInLeft\" alt={name} />\n                </DivImagen>\n\n                <DivTexto>\n                    <H3>{name}</H3>\n                    <hr/>\n                    <div>\n                        <Parrafo>\n                            <b>Aldea:</b> {village}\n                        </Parrafo>\n                        <Parrafo>\n                            <b>Técnica:</b> {techniques}\n                        </Parrafo>\n                        <Parrafo>\n                            <b>Frase:</b> {phrase}\n                        </Parrafo>\n                        <Button\n                            onClick={handleReturn}\n                        >Return</Button>\n                    </div>\n                </DivTexto>\n            </Div>\n        </>\n    )\n}\n\nexport default NinjaScreen;","import {ninjas} from '../data/Ninjas';\n\nexport const getNinjaById = (id) => {\n\n    return ninjas.find(ninja => ninja.id === id);\n}","import React, { useState, useMemo } from 'react';\nimport { NinjaCard } from '../Ninjas/NinjaCard';\nimport { useLocation } from 'react-router-dom';\nimport queryString from 'query-string'\nimport {getNinjaByName} from '../../selectors/getNinjaByName';\n\nexport const SearchScreen = ({history}) => {\n\n    const location = useLocation();\n    const {q = ''} = queryString.parse(location.search);\n    \n    const [state, setState] = useState({\n        searchText: q\n    });\n\n    const handleInputChange = (e) => {\n        setState({\n            ...state,\n            [e.target.name] : e.target.value,\n        })\n    }\n\n    const {searchText} = state;\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        history.push(`?q=${searchText}`);\n    }\n\n    const ninjasFilter = useMemo(() => getNinjaByName(q), [q]);\n\n    return (\n        <div>\n            <h1>Search</h1>\n            <hr/>\n\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <h4>Busca tu ninja</h4>\n                    <hr/>\n\n                    <form\n                        onSubmit={handleSearch}\n                    >\n                        <input\n                            type=\"text\"\n                            placeholder=\"Ingrese un nombre...\"\n                            className=\"form-control\"\n                            name=\"searchText\"\n                            autoComplete=\"off\"\n                            value={searchText}\n                            onChange={handleInputChange}\n                        >\n                        </input>\n\n                        <button\n                            type=\"submit\"\n                            className=\"btn m-1 btn-block btn-outline-dark\"\n                        >\n                            Search\n                        </button>\n                    </form>\n                </div>\n\n                <div className=\"col-7\">\n                    <h4>Resultados</h4>\n                    <hr/>\n\n                    { (q==='') \n                        && \n                        <div className=\"alert alert-info\">\n                            Aún no se ha buscado ningún ninja. \n                        </div>\n                    }\n\n                    { (q !=='' && ninjasFilter.length === 0)\n                        && \n                        <div className=\"alert alert-danger\">\n                            No hay resultados de ninjas con la palabra {q}.\n                        </div>\n                    }\n\n                    {\n                        ninjasFilter.map(ninja => (\n                            <NinjaCard\n                                key={ninja.id}\n                                {...ninja}\n                            />\n                        ))\n                    }\n                </div>\n\n            </div>\n        </div>\n    )\n}\n","import {ninjas} from '../data/Ninjas';\n\nexport const getNinjaByName = (name = '') => {\n\n    if (name === ''){\n        return [];\n    }\n\n    name = name.toLocaleLowerCase();\n    return ninjas.filter(ninja => ninja.name.toLocaleLowerCase().includes(name));\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Navbar } from '../components/ui/Navbar';\nimport { ProtagonistaScreen } from '../components/Protagonista/ProtagonistaScreen';\nimport { SecundarioScreen } from '../components/Secundario/SecundarioScreen';\nimport { AntagonistaScreen } from '../components/Antagonista/AntagonistaScreen';\nimport { NinjaScreen } from '../components/Ninjas/NinjaScreen';\nimport { SearchScreen } from '../components/Search/SearchScreen';\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n\n            <div className=\"container mt-3\">\n                <Switch>\n                    <Route exact path=\"/Protagonista\" component={ProtagonistaScreen} />\n                    <Route exact path=\"/Ninja/:ninjaId\" component={NinjaScreen} />\n                    <Route exact path=\"/Secundario\" component={SecundarioScreen} />\n                    <Route exact path=\"/Antagonista\" component={AntagonistaScreen} />\n                    <Route exact path=\"/Search\" component={SearchScreen} />\n                    \n                    <Redirect to=\"/Protagonista\" component={ProtagonistaScreen}/>\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/Login/LoginScreen';\nimport { DashboardRoutes } from './DashboardRoutes';\n\nexport const AppRouter = () => {\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route exact path=\"/Login\" component={LoginScreen} />\n                    <Route path=\"/\" component= {DashboardRoutes} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport './index.css';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const App = () => {\n  return (\n    <AppRouter />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nconst divRoot = document.getElementById('root')\n\nReactDOM.render(<App />, divRoot);\n"],"sourceRoot":""}